## select-history
function peco-select-history() {
  local tac
  if which tac > /dev/null; then
    tac="tac"
  else
    tac="tail -r"
  fi
  BUFFER=$(\history -n 1 | \
    eval $tac | \
    peco --query "$LBUFFER")
  CURSOR=$#BUFFER
  zle clear-screen
}
zle -N peco-select-history
bindkey '^r' peco-select-history

## pushd
function peco-pushd() {
  eval cd $(pushd | sed -e "s/ /\n/g" | peco)
  zle reset-prompt
}
zle -N peco-pushd
bindkey "^a" peco-pushd

## src
function peco-src () {
  local selected_dir=$(ghq list --full-path | peco --query "$LBUFFER")
  if [ -n "$selected_dir" ]; then
    BUFFER="cd ${selected_dir}"
    zle accept-line
  fi
  zle clear-screen
}
zle -N peco-src
bindkey '^s' peco-src

## function-list
function peco-function-list () {
  local selected=$(functions | grep "^.*\ ()\ {" | sed -e "s| () {||" | grep peco- | grep -v function-list | peco --query "$LBUFFER")
  if [ -n "$selected" ]; then
    ${selected}
  fi
}
zle -N peco-function-list
bindkey '^p' peco-function-list

## open
function peco-open() {
  local var
  local file
  local command="open"
  if [ ! -t 0 ]; then
    var=$(cat -)
    file=$(echo -n $var | peco)
  else
    return 1
  fi

  if [ -n "$1" ]; then
    command="$1"
  fi

  if [ -e "$file" ]; then
    eval "$command $file"
  else
    echo "Could not open '$file'." >&2
    return 1
  fi
}
